function ajaxGet(t, e) { $.ajax({ url: t, success: e, error: function (t, e, r) { console.log(t, e, r) } }) } function ajaxPost(t, e, r) { $.ajax({ url: t, type: "POST", dataType: "json", data: e, success: r, error: function (t) { console.log(t), t.responseJSON.odg && alert(t.responseJSON.odg), t.responseJSON.text && alert(t.responseJSON.text) } }) } function getProjects() { ajaxGet("data/projects.json", t => { printProjects(t) }) } function printProjects(t) { let e = ""; for (const r of t) e += `\n\t\t\t<div>\n\t\t\t\t<div class="post">\n\t\t\t\t\t<img class="thumbnail" src="assets/images/${r.img.path}" alt="${r.img.alt}" />\n\t\t\t\t\t<div class="post-preview">\n\t\t\t\t\t\t<h6 class="post-title">${r.name}</h6>\n\t\t\t\t\t\t<p class="post-intro">${r.description}</p>\n\n\t\t\t\t\t\t<div class="postLinks">\n\t\t\t\t\t\t\t<a href="${r.links.live}" target="_blank">Visit Link</a>\n\t\t\t\t\t\t\t<a class="codeLink" href="${r.links.github}" target="_blank">View\n\t\t\t\t\t\t\t\tCode</a>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t${printTags(r.tags)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`; $(".post-wrapper").html(e) } function printTags(t) { let e = ""; for (const r of t) e += `\n\t\t\t<span class="tag">${r}</span>\n\t\t`; return e } window.onload = function () { let t = window.location.pathname; -1 == t.indexOf("index") && "/portfolio-website/" != t && "/" != t || (getProjects(), $(".error").hide(), $("#moreInfo").hide()) }; var regexName = /^[A-Z][a-z]{2,20}(\s[A-Z][a-z]{3,20}){1,3}$/, regexEmail = /^[A-z\d\.-]{5,100}\@[a-z]{2,10}\.[a-z]{2,20}$/, regexSubject = /^[A-z\d\.\-\s.#]{5,100}$/, errors = []; function checkContactForm() { errors = []; var t = [{ selector: "#name", regex: regexName, type: "input", example: "Blake Smith" }, { selector: "#subject", regex: regexSubject, type: "input", example: "Job offer" }, { selector: "#email", regex: regexEmail, type: "input", example: "blake32smith@gmail.com" }, { selector: "#message", type: "textarea", example: "Message must have at least 10 characters" }]; for (const e of t) "input" == e.type ? checkInput(e) : checkMsg(e); return console.log(errors), 0 == errors.length || (console.log("forma ne valja"), !1) } function checkInput(t) { let e = $(t.selector), r = t.regex, s = $(t.selector + "Err"); if (!r.test(e.val())) return errors.push(t.selector + " not in right format"), e.addClass("border border-danger"), s.html("Valid format: " + t.example), s.fadeIn(), !1; e.removeClass("border-danger"), s.hide() } function checkMsg(t) { let e = $(t.selector), r = $(t.selector + "Err"); if (console.log(e.val().length), "" == e.val() || e.val().length <= 9) { let r = $(t.selector + "Err"); return r.fadeIn(), r.html("Message must have at least 10 characters"), errors.push("Message has less than 10 characters"), e.addClass("border border-danger"), !1 } e.removeClass("border-danger"), r.fadeIn() }